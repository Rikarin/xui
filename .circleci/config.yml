version: 2.1

aliases:
  - &defaults
    working_directory: ~/repo
    docker:
      - image: cimg/node:18.11.0-browsers
  - &yarn_cache
    keys:
      - node-deps-node18-{{ checksum "yarn.lock" }}
      # fallback to using the latest cache if no exact match is found
      - node-deps-node18-
  - &yarn_install
    name: Install Dependencies
    command: yarn install --frozen-lockfile --non-interactive

# -----------------------------------------------------------------------------------------
# Job definitions. Jobs which are defined just here, will not run automatically. Each job
# must be part of a workflow definition in order to run for PRs and push builds.
# -----------------------------------------------------------------------------------------
jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_cache
      - run:
          <<: *yarn_install
      - save_cache:
          key: node-deps-node18-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache
            - node_modules

  check-formatting:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_cache
      - run: yarn format:check

  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_cache
      - run: ./node_modules/.bin/nx workspace-lint
      - run: yarn lint --parallel
      - run:
          name: Define environment variable with lastest commit's message
          command: |
            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Lint commit message
          command: echo "$COMMIT_MESSAGE" | npx commitlint

  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_cache
      - run: yarn build --parallel --configuration=production
      - save_cache:
          key: build-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - dist
      - store_artifacts:
          path: dist

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_cache
      - run: yarn test --parallel --ci --code-coverage
  e2e:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_cache
      - run: yarn e2e --configuration=production
      - store_artifacts:
          path: dist/cypress

  publish:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *yarn_cache
      - restore_cache:
          key: build-{{ .Environment.CIRCLE_WORKFLOW_ID }}
      - run:
          name: Authenticate with npm registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run:
          name: Publish library to npm
          command: npm publish ./dist/libs/xui

workflows:
  build_deploy:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - check-formatting:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - lint:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - install
          #      - e2e:
          #          requires:
          #            - install
          filters:
            tags:
              only: /^v.*$/
      - publish:
          requires:
            - check-formatting
            - lint
            - test
            - build
          #            - e2e
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
